plugins {
    id 'org.ajoberstar.grgit' version '1.5.1'
    id 'de.gliderpilot.semantic-release' version '1.2.0'
}

group 'com.praqma'

apply plugin: 'groovy'

repositories {
    mavenCentral()
}
import static org.ajoberstar.gradle.git.release.semver.StrategyUtil.*
import org.ajoberstar.gradle.git.release.semver.*
import org.ajoberstar.gradle.git.release.opinion.Strategies

def branchName = grgit.branch.current.name
println "BranchName: " + branchName
release {
    versionStrategy semanticRelease.releaseStrategy.copyWith(
            // the type is important, without type you would again replace the default strategy
            type: 'rc',
            selector: { SemVerStrategyState state ->
                state.currentBranch.name ==~ /integration.*/ &&
                        semanticRelease.semanticStrategy.canRelease(state) &&
                        state.nearestVersion.distanceFromAny &&
                        !state.isRepoDirty() &&
                        project.gradle.startParameter.taskNames.find { it == 'release' }
            },
            preReleaseStrategy: StrategyUtil.all({ it.copyWith(inferredPreRelease: 'integration') } as PartialSemVerStrategy, Strategies.PreRelease.STAGE_FIXED)
    )
}

// cheklsjgohgor
dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
